[{"id":0,"href":"/docs/","title":"01_hugoのドキュメント群","section":"Introduction","content":"ドキュメント群 #  "},{"id":1,"href":"/docs/hugo%E9%96%A2%E9%80%A3/hugo%E3%81%AE%E8%A8%AD%E5%AE%9A/","title":"Hugoの設定","section":"Hugo関連","content":"設定 #  基本設定 #  KaTexなどのマークアップを有効にする #  [markup.goldmark.renderer] unsafe = true  GitHub Actions を使って GitHub Pages に公開する設定 #  2022-02-14\nキーの作成 #  deploy key(秘密鍵) と secret(公開鍵)を登録する。\nhttps://www.morling.dev/blog/automatically-deploying-hugo-website-via-github-actions/\n空の .nojekyll を作成する #  git push してgithub側で build される際、「Deploy to GitHub Pages」の段階で次のエラーが出るため、空の .nojekyll を作成しておく。\nError: Error: No uploaded artifact was found! Please check if there are any errors at build step. touch .nojekyll  https://stackoverflow.com/questions/70830152/page-on-github-wont-publish-error-404-not-found\ngh-pages-deployment.yml #  ここを参考にGitHub Actionの設定ファイル gh-pages-deployment.yml を作成する。 https://gohugo.io/hosting-and-deployment/hosting-on-github/#build-hugo-with-github-action\n以下の例では、\n# extended: true\nのコメントアウトをはずし、 if: github.ref == 'refs/heads/main' を削除し、branch を masterにしてある。\n.github/workflows/gh-pages-deployment.yml\nname: github pages on: push: branches: - master # Set a branch to deploy pull_request: jobs: deploy: runs-on: ubuntu-20.04 steps: - uses: actions/checkout@v2 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: 'latest' extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./public  "},{"id":2,"href":"/docs/python3/snippet/","title":"snippet","section":"Python3","content":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  # ファイルの存在確認 import os if (os.path.isfile(path)): pass # ファイルの読み込み with open(\u0026#39;./settings.json\u0026#39;) as f: print(f.read()) # ファイルの書込み data = \u0026#34;test\u0026#34; with open(path, mode=\u0026#39;w\u0026#39;) as f: f.write(data) # ファイルのコピー import shutil shutil.copy(\u0026#39;./old.txt\u0026#39;, \u0026#39;./sample/new.txt\u0026#39;) ###################################### # json.load() で読み込む場合 with open(\u0026#39;./settings.json\u0026#39;) as f: json_dict = json.load(f) pprint.pprint(json_dict, width=40) print(type(json_dict)) # dict を for ループ for key, value in dict_test.items(): print(key, value)   ファイルパス、ファイル名関連 #  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  # ファイルパスからファイル名を取得 basename = os.path.basename(path) print(basename) # 新しいパスを作成する import os read_path = \u0026#39;./aaa/bbb/ccc_ddd_eee.txt\u0026#39; file_name = os.path.basename(read_path) #\u0026#39;ccc_ddd_eee.txt\u0026#39; dir_name = os.path.dirname(read_path) # \u0026#39;./aaa/bbb\u0026#39; file_name_split = file_name.split(\u0026#39;.\u0026#39;) new_file_name = file_name_split[0] + \u0026#34;_add_xxx_.\u0026#34; + file_name_split[1] # 文字列を正規表現で置換 import re new_dir = re.sub(\u0026#39;bbb$\u0026#39;, \u0026#39;zzz\u0026#39;, dir_name) save_path = new_dir + \u0026#39;/\u0026#39; + new_file_name # \u0026#39;./aaa/zzz/ccc_ddd_eee_add_xxx_.txt\u0026#39;   テストの書き方 #  1 2 3 4 5 6 7 8 9 10 11 12 13  def add(x, y): \u0026#34;\u0026#34;\u0026#34; xとyを加算した結果を返す \u0026gt;\u0026gt;\u0026gt; add(2, 3) 5 \u0026#34;\u0026#34;\u0026#34; return x + y python -m doctest -v add.py # Jupyter上でテストする場合 import doctest doctest.testmod()       "},{"id":3,"href":"/docs/data-science/pandas/snippet/","title":"pandas","section":"Data Science","content":"snippet #  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  import pandas as pd df.to_pickle(\u0026#39;df_data.pkl\u0026#39;) pd.read_pickle(\u0026#39;df_data.pkl\u0026#39;) # 基本操作 ## index を設定する。 ## drop=False で既存のインデックスを退避する。 df = df.set_index([\u0026#39;timestamp\u0026#39;], drop=False) ## index の番号を振りなおす。 ## 既存のインデックスを連番に変更し、既存のインデックスはカラムに退避する df = df.reset_index() df.index.name = \u0026#39;index\u0026#39; # drop=True で既存のインデックスを退避せず上書きする df = df.reset_index(drop=True) df.index.name= \u0026#39;index\u0026#39; # 統計量を表示する df.describe()   "},{"id":4,"href":"/docs/python3/","title":"Python3","section":"01_hugoのドキュメント群","content":"Python3 #  test\n"},{"id":5,"href":"/docs/data-science/","title":"Data Science","section":"01_hugoのドキュメント群","content":"Data Science #  "},{"id":6,"href":"/docs/hugo%E9%96%A2%E9%80%A3/","title":"Hugo関連","section":"01_hugoのドキュメント群","content":"Hugo関連 #  "},{"id":7,"href":"/docs/data-science/pip/","title":"pip","section":"Data Science","content":" pip install mplfinance "},{"id":8,"href":"/docs/network/%E9%80%9A%E4%BF%A1%E9%80%9F%E5%BA%A6/","title":"通信速度","section":"01_hugoのドキュメント群","content":"httping\n"}]